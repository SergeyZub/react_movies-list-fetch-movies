{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","api/api.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","error","film","addFilm","query","handleSearch","handleChange","onSubmit","event","preventDefault","htmlFor","type","id","value","placeholder","onChange","onClick","Title","Plot","Poster","imdbID","App","useState","data","setMovies","setQuery","findFilm","findError","url","options","fetch","then","response","json","result","Response","target","some","cinema","array","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19f39d07.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({\n  error,\n  film,\n  addFilm,\n  query,\n  handleSearch,\n  handleChange,\n}) => (\n  <>\n    <form\n      className=\"find-movie\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        addFilm(film);\n      }}\n    >\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"movie-title\">\n          Movie title\n        </label>\n\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            id=\"movie-title\"\n            value={query}\n            placeholder=\"Enter a title to search\"\n            className={`input ${error ? 'is-danger' : ''}`}\n            onChange={event => handleChange(event)}\n          />\n        </div>\n\n        {error && (\n        <p className=\"help is-danger\">\n          Can&apos;t find a movie with such a title\n        </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            className=\"button is-light\"\n            onClick={handleSearch}\n          >\n            Find a movie\n          </button>\n        </div>\n\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className=\"button is-primary\"\n          >\n            Add to the list\n          </button>\n        </div>\n      </div>\n    </form>\n\n    <div className=\"container\">\n      <h2 className=\"title\">Preview</h2>\n      {!!film && (\n        <MovieCard\n          title={film.Title}\n          description={film.Plot}\n          imgUrl={film.Poster}\n          imdbUrl={`https://www.imdb.com/title/${film.imdbID}`}\n        />\n      )}\n    </div>\n  </>\n);\n\nFindMovie.propTypes = {\n  error: PropTypes.bool.isRequired,\n  film: PropTypes.shape().isRequired,\n  addFilm: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\nimport { request } from './api/api';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n  const [query, setQuery] = useState('');\n  const [film, findFilm] = useState(null);\n  const [error, findError] = useState(false);\n\n  const handleSearch = () => {\n    request(query)\n      .then((result) => {\n        if (result.Response === 'False') {\n          findFilm(null);\n\n          return findError(true);\n        }\n\n        return findFilm(result);\n      });\n  };\n\n  const handleChange = (event) => {\n    setQuery(event.target.value);\n    findError(false);\n  };\n\n  const addFilm = (movie) => {\n    if (!movie) {\n      return findError(true);\n    }\n\n    if (movies.some(cinema => cinema.imdbId === movie.imdbID) === true) {\n      setQuery('');\n\n      return findFilm(null);\n    }\n\n    const { Title, Plot, Poster, imdbID } = movie;\n    const result = {\n      title: Title,\n      description: Plot,\n      imgUrl: Poster,\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imdbId: imdbID,\n    };\n\n    setMovies(array => [...array, result]);\n    setQuery('');\n\n    return findFilm(null);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          film={film}\n          setQuery={setQuery}\n          query={query}\n          handleSearch={handleSearch}\n          error={error}\n          handleChange={handleChange}\n          addFilm={addFilm}\n        />\n      </div>\n    </div>\n  );\n};\n","const API = 'https://www.omdbapi.com/?apikey=aa1c51db&t=';\n\nexport const request = (url, options) => fetch(`${API}${url}`, options)\n  .then(response => response.json());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}