{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addFilm","useState","query","setQuery","film","setFilm","error","setError","onSubmit","event","preventDefault","htmlFor","type","id","value","placeholder","onChange","target","handleChange","onClick","url","options","fetch","then","response","json","result","Response","Title","Plot","Poster","imdbID","App","data","setMovies","some","cinema","array","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83af2d97.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/api';\n\nexport const FindMovie = ({ addFilm }) => {\n  const [query, setQuery] = useState('');\n  const [film, setFilm] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleSearch = () => {\n    request(query)\n      .then((result) => {\n        if (result.Response === 'False') {\n          setFilm(null);\n\n          return setError(true);\n        }\n\n        return setFilm(result);\n      });\n  };\n\n  const handleChange = (event) => {\n    setQuery(event.target.value);\n    setError(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!film) {\n      return setError(true);\n    }\n\n    addFilm(film);\n    setQuery('');\n\n    return setFilm(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={query}\n              placeholder=\"Enter a title to search\"\n              className={`input ${error ? 'is-danger' : ''}`}\n              onChange={event => handleChange(event)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleSearch}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {!!film && (\n          <MovieCard\n            title={film.Title}\n            description={film.Plot}\n            imgUrl={film.Poster}\n            imdbUrl={`https://www.imdb.com/title/${film.imdbID}`}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addFilm: PropTypes.func.isRequired,\n};\n","const API = 'https://www.omdbapi.com/?apikey=aa1c51db&t=';\n\nexport const request = (url, options) => fetch(`${API}${url}`, options)\n  .then(response => response.json());\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addFilm = (movie) => {\n    if (movies.some(cinema => cinema.imdbId === movie.imdbID) === true) {\n      return;\n    }\n\n    const { Title, Plot, Poster, imdbID } = movie;\n    const result = {\n      title: Title,\n      description: Plot,\n      imgUrl: Poster,\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imdbId: imdbID,\n    };\n\n    setMovies(array => [...array, result]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movies}\n        />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addFilm={addFilm}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}